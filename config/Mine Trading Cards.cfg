# Configuration file

~CONFIG_VERSION: 1.1

colors {
    # Color for ancient cards. Entered as a decimal integer, or as a hexadecimal by putting # in front. [default: #55ffff]
    S:card_color_ancient=#55ffff

    # Color for common cards. Entered as a decimal integer, or as a hexadecimal by putting # in front. [default: #55ff55]
    S:card_color_common=#55ff55

    # Color for legendary cards. Entered as a decimal integer, or as a hexadecimal by putting # in front. [default: #ff55ff]
    S:card_color_legendary=#ff55ff

    # Color for rare cards. Entered as a decimal integer, or as a hexadecimal by putting # in front. [default: #ff5555]
    S:card_color_rare=#ff5555

    # Color for uncommon cards. Entered as a decimal integer, or as a hexadecimal by putting # in front. [default: #ffaa00]
    S:card_color_uncommon=#ffaa00

    # Tooltip color for ancient cards, using "friendly" Minecraft color name [default: aqua]
    S:card_tooltip_color_ancient=aqua

    # Tooltip color for common cards, using "friendly" Minecraft color name [default: green]
    S:card_tooltip_color_common=green

    # Tooltip color for legendary cards, using "friendly" Minecraft color name [default: light_purple]
    S:card_tooltip_color_legendary=light_purple

    # Tooltip color for rare cards, using "friendly" Minecraft color name [default: red]
    S:card_tooltip_color_rare=red

    # Tooltip color for uncommon cards, using "friendly" Minecraft color name [default: gold]
    S:card_tooltip_color_uncommon=gold

    # Color for ancient packs. Entered as a decimal integer, or as a hexadecimal by putting # in front. [default: #55ffff]
    S:pack_color_ancient=#55ffff

    # Color for common packs. Entered as a decimal integer, or as a hexadecimal by putting # in front. [default: #55ff55]
    S:pack_color_common=#55ff55

    # Color for legendary packs. Entered as a decimal integer, or as a hexadecimal by putting # in front. [default: #ff55ff]
    S:pack_color_legendary=#ff55ff

    # Color for rare packs. Entered as a decimal integer, or as a hexadecimal by putting # in front. [default: #ff5555]
    S:pack_color_rare=#ff5555

    # Color for standard packs. Entered as a decimal integer, or as a hexadecimal by putting # in front. [default: #5555ff]
    S:pack_color_standard=#5555ff

    # Color for uncommon packs. Entered as a decimal integer, or as a hexadecimal by putting # in front. [default: #ffaa00]
    S:pack_color_uncommon=#ffaa00
}


drops {
    # Animals will drop cards on death. [default: false]
    B:animals_can_drop_cards=false

    # Animals will drop packs on death. [default: false]
    B:animals_can_drop_packs=false

    # List of MTC drops from the bosses that aren't the Ender Dragon. Entries are of the form:
    # drop_item:float_amount
    # Possible drop_item values are:
    # [common/uncommon/rare/ancient/legendary/standard/edition/custom]_pack or [common/uncommon/rare/ancient/legendary]_card.
    # float_amount is an either an integer representing the number of this item to drop, or a float like 4.7, where e.g. 70%, 5 will be dropped; otherwise 4 will.
    # This list applies even if "can_drop" is false. [default: [common_pack:3], [uncommon_pack:3], [rare_pack:2], [ancient_pack:1], [legendary_pack:0.25]]
    S:boss_drops <
        common_pack:3
        uncommon_pack:3
        rare_pack:2
        ancient_pack:1
        legendary_pack:0.25
     >

    # Chance out of X to drop ancient cards. Set to 0 to disable. [range: 0.0 ~ 3.4028235E38, default: 0.0]
    S:card_drop_rate_ancient=0.0

    # Chance out of X to drop common cards. Set to 0 to disable. [range: 0.0 ~ 3.4028235E38, default: 0.0]
    S:card_drop_rate_common=0.0

    # Chance out of X to drop legendary cards. Set to 0 to disable. [range: 0.0 ~ 3.4028235E38, default: 0.0]
    S:card_drop_rate_legendary=0.0

    # Chance out of X to drop rare cards. Set to 0 to disable. [range: 0.0 ~ 3.4028235E38, default: 0.0]
    S:card_drop_rate_rare=0.0

    # Chance out of X to drop uncommon cards. Set to 0 to disable. [range: 0.0 ~ 3.4028235E38, default: 0.0]
    S:card_drop_rate_uncommon=0.0

    # List of MTC drops from the Ender Dragon. Entries are of the form:
    # drop_item:float_amount
    # Possible drop_item values are:
    # [common/uncommon/rare/ancient/legendary/standard/edition/custom]_pack or [common/uncommon/rare/ancient/legendary]_card.
    # float_amount is an either an integer representing the number of this item to drop, or a float like 4.7, where e.g. 70%, 5 will be dropped; otherwise 4 will.
    # This list applies even if "can_drop" is false. [default: [common_pack:7], [uncommon_pack:5], [rare_pack:3], [ancient_pack:2], [legendary_pack:1]]
    S:ender_dragon_drops <
        common_pack:7
        uncommon_pack:5
        rare_pack:3
        ancient_pack:2
        legendary_pack:1
     >

    # Mobs will drop cards on death. [default: true]
    B:mobs_can_drop_cards=true

    # Mobs will drop packs on death. [default: true]
    B:mobs_can_drop_packs=true

    # If true, entities will not drop more than one MTC item at once. [default: false]
    B:only_one_drop=false

    # Chance out of X to drop ancient packs. Set to 0 to disable. [range: 0.0 ~ 3.4028235E38, default: 64.0]
    S:pack_drop_rate_ancient=64.0

    # Chance out of X to drop common packs. Set to 0 to disable. [range: 0.0 ~ 3.4028235E38, default: 16.0]
    S:pack_drop_rate_common=16.0

    # Chance out of X to drop custom packs. Set to 0 to disable. [range: 0.0 ~ 3.4028235E38, default: 40.0]
    S:pack_drop_rate_custom=40.0

    # Chance out of X to drop set-specific (edition) packs. Set to 0 to disable. [range: 0.0 ~ 3.4028235E38, default: 40.0]
    S:pack_drop_rate_edition=40.0

    # Chance out of X to drop legendary packs. Set to 0 to disable. [range: 0.0 ~ 3.4028235E38, default: 256.0]
    S:pack_drop_rate_legendary=256.0

    # Chance out of X to drop rare packs. Set to 0 to disable. [range: 0.0 ~ 3.4028235E38, default: 48.0]
    S:pack_drop_rate_rare=48.0

    # Chance out of X to drop standard packs. Set to 0 to disable. [range: 0.0 ~ 3.4028235E38, default: 40.0]
    S:pack_drop_rate_standard=40.0

    # Chance out of X to drop uncommon packs. Set to 0 to disable. [range: 0.0 ~ 3.4028235E38, default: 32.0]
    S:pack_drop_rate_uncommon=32.0

    # Players will drop cards on death. [default: false]
    B:players_can_drop_cards=false

    # Players will drop packs on death. [default: false]
    B:players_can_drop_packs=false
}


logs {
    # Enable developer logs [default: false]
    B:devlog_enabled=false
}


"pack contents" {
    # Number and type of cards dropped when a Ancient pack is opened. Entries are of the form:
    # NxW:W:W:W:W or Nx
    # N is the number of cards added from this row. It can be an integer (e.g. 5) or it can be a float like 3.4 (40% of the time 4 will be generated; otherwise 3 will).
    # x is just the letter x. Leave this as is.
    # W:W:W:W:W:W is a distribution of rarity weights representing Com:Unc:Rar:Anc:Leg. Each card generated from this row will be drawn from this distribution. For example: 0:1:0:0:1 has an equal chance of being an Uncommon or Legendary card. 2:1:1:1:1 can be any rarity, but is twice as likely to be Ancient as the other rarities.
    # For Nx formatting, the weighting portion is omitted. All cards genrerated are Ancient, because this is a Ancient pack. N can be an integer or a float, as explained above. [default: [3x1:0:0:0:0], [3x0:1:0:0:0], [3x0:0:1:0:0], [1x]]
    S:ancient_pack_contents <
        3x1:0:0:0:0
        3x0:1:0:0:0
        3x0:0:1:0:0
        1x
     >

    # Number and type of cards dropped when a Common pack is opened. Entries are of the form:
    # NxW:W:W:W:W or Nx
    # N is the number of cards added from this row. It can be an integer (e.g. 5) or it can be a float like 3.4 (40% of the time 4 will be generated; otherwise 3 will).
    # x is just the letter x. Leave this as is.
    # W:W:W:W:W:W is a distribution of rarity weights representing Com:Unc:Rar:Anc:Leg. Each card generated from this row will be drawn from this distribution. For example: 0:1:0:0:1 has an equal chance of being an Uncommon or Legendary card. 2:1:1:1:1 can be any rarity, but is twice as likely to be Common as the other rarities.
    # For Nx formatting, the weighting portion is omitted. All cards genrerated are Common, because this is a Common pack. N can be an integer or a float, as explained above. [default: [7x], [2x0:1:0:0:0], [1x0:0:1:0:0]]
    S:common_pack_contents <
        7x
        2x0:1:0:0:0
        1x0:0:1:0:0
     >

    # Number and type of cards dropped when a Edition pack is opened. Entries are of the form:
    # NxW:W:W:W:W
    # N is the number of cards added from this row. It can be an integer (e.g. 5) or it can be a float like 3.4 (40% of the time 4 will be generated; otherwise 3 will).
    # x is just the letter x. Leave this as is.
    # W:W:W:W:W:W is a distribution of rarity weights representing Com:Unc:Rar:Anc:Leg. Each card generated from this row will be drawn from this distribution. For example: 0:1:0:0:1 has an equal chance of being an Uncommon or Legendary card. 2:1:1:1:1 can be any rarity, but is twice as likely to be Edition as the other rarities. [default: [7x1:0:0:0:0], [2x0:1:0:0:0], [1x0:0:25:4:1]]
    S:edition_pack_contents <
        7x1:0:0:0:0
        2x0:1:0:0:0
        1x0:0:25:4:1
     >

    # Number and type of cards dropped when a Legendary pack is opened. Entries are of the form:
    # NxW:W:W:W:W or Nx
    # N is the number of cards added from this row. It can be an integer (e.g. 5) or it can be a float like 3.4 (40% of the time 4 will be generated; otherwise 3 will).
    # x is just the letter x. Leave this as is.
    # W:W:W:W:W:W is a distribution of rarity weights representing Com:Unc:Rar:Anc:Leg. Each card generated from this row will be drawn from this distribution. For example: 0:1:0:0:1 has an equal chance of being an Uncommon or Legendary card. 2:1:1:1:1 can be any rarity, but is twice as likely to be Legendary as the other rarities.
    # For Nx formatting, the weighting portion is omitted. All cards genrerated are Legendary, because this is a Legendary pack. N can be an integer or a float, as explained above. [default: [1x]]
    S:legendary_pack_contents <
        1x
     >

    # Number and type of cards dropped when a Rare pack is opened. Entries are of the form:
    # NxW:W:W:W:W or Nx
    # N is the number of cards added from this row. It can be an integer (e.g. 5) or it can be a float like 3.4 (40% of the time 4 will be generated; otherwise 3 will).
    # x is just the letter x. Leave this as is.
    # W:W:W:W:W:W is a distribution of rarity weights representing Com:Unc:Rar:Anc:Leg. Each card generated from this row will be drawn from this distribution. For example: 0:1:0:0:1 has an equal chance of being an Uncommon or Legendary card. 2:1:1:1:1 can be any rarity, but is twice as likely to be Rare as the other rarities.
    # For Nx formatting, the weighting portion is omitted. All cards genrerated are Rare, because this is a Rare pack. N can be an integer or a float, as explained above. [default: [5x1:0:0:0:0], [3x0:1:0:0:0], [2x]]
    S:rare_pack_contents <
        5x1:0:0:0:0
        3x0:1:0:0:0
        2x
     >

    # Number and type of cards dropped when a Standard pack is opened. Entries are of the form:
    # NxW:W:W:W:W
    # N is the number of cards added from this row. It can be an integer (e.g. 5) or it can be a float like 3.4 (40% of the time 4 will be generated; otherwise 3 will).
    # x is just the letter x. Leave this as is.
    # W:W:W:W:W:W is a distribution of rarity weights representing Com:Unc:Rar:Anc:Leg. Each card generated from this row will be drawn from this distribution. For example: 0:1:0:0:1 has an equal chance of being an Uncommon or Legendary card. 2:1:1:1:1 can be any rarity, but is twice as likely to be Standard as the other rarities. [default: [7x1:0:0:0:0], [2x0:1:0:0:0], [1x0:0:25:4:1]]
    S:standard_pack_contents <
        7x1:0:0:0:0
        2x0:1:0:0:0
        1x0:0:25:4:1
     >

    # Number and type of cards dropped when a Uncommon pack is opened. Entries are of the form:
    # NxW:W:W:W:W or Nx
    # N is the number of cards added from this row. It can be an integer (e.g. 5) or it can be a float like 3.4 (40% of the time 4 will be generated; otherwise 3 will).
    # x is just the letter x. Leave this as is.
    # W:W:W:W:W:W is a distribution of rarity weights representing Com:Unc:Rar:Anc:Leg. Each card generated from this row will be drawn from this distribution. For example: 0:1:0:0:1 has an equal chance of being an Uncommon or Legendary card. 2:1:1:1:1 can be any rarity, but is twice as likely to be Uncommon as the other rarities.
    # For Nx formatting, the weighting portion is omitted. All cards genrerated are Uncommon, because this is a Uncommon pack. N can be an integer or a float, as explained above. [default: [6x1:0:0:0:0], [3x], [1x0:0:1:0:0]]
    S:uncommon_pack_contents <
        6x1:0:0:0:0
        3x
        1x0:0:1:0:0
     >
}


updates {
    # Displays a client-side chat message on login if there's an update available. [default: true]
    B:enable_update_checker=true
}


villagers {
    # List of possible Card Master trades. Entries are of the form:
    # sellitem|amount|buyitem1|amount|buyitem2|amount
    # "amount" is either an integer, or a range like 1-3.
    # buyitem2|amount is optional.
    # Possible sellitem and buyitem values are:
    # iron_ingot, gold_ingot, emerald, diamond, [common/uncommon/rare/ancient/legendary/standard/edition/custom]_pack or [common/uncommon/rare/ancient/legendary]_card.
    # You also append "_random" at the end of a _card entry (e.g. common_card_random) in order to generate a random card for sale (or requested). [default: [1|1.0|common_pack|1|emerald|1], [1|1.0|standard_pack|1|emerald|2], [1|1.0|common_card_random|1|iron_ingot|2-4], [2|0.9|edition_pack|1|emerald|2|iron_ingot|0-1], [2|1.0|uncommon_pack|1|emerald|2|gold_ingot|0-1], [2|0.8|uncommon_card_random|1|gold_ingot|2-3], [3|1.0|rare_pack|1|emerald|3-6], [3|0.7|rare_card_random|1|emerald|2-3], [4|1.0|ancient_pack|1|emerald|16-21], [4|0.6|ancient_card_random|1|emerald|18-24], [5|0.5|legendary_pack|1|emerald|53-64], [5|0.5|legendary_card_random|1|diamond|16-21]]
    S:card_master_trades <
        1|1.0|common_pack|1|emerald|1
        1|1.0|standard_pack|1|emerald|2
        1|1.0|common_card_random|1|iron_ingot|2-4
        2|0.9|edition_pack|1|emerald|2|iron_ingot|0-1
        2|1.0|uncommon_pack|1|emerald|2|gold_ingot|0-1
        2|0.8|uncommon_card_random|1|gold_ingot|2-3
        3|1.0|rare_pack|1|emerald|3-6
        3|0.7|rare_card_random|1|emerald|2-3
        4|1.0|ancient_pack|1|emerald|16-21
        4|0.6|ancient_card_random|1|emerald|18-24
        5|0.5|legendary_pack|1|emerald|53-64
        5|0.5|legendary_card_random|1|diamond|16-21
     >

    # Maximum number of card master shops that can spawn per village [range: 0 ~ 32, default: 1]
    I:card_shop_max_number=1

    # Weighting for selection when villages generate. Farms and wood huts are 3, church is 20. [range: 0 ~ 100, default: 5]
    I:card_shop_weight=5

    # List of possible Card Trader trades. Entries are of the form:
    # sellitem|amount|buyitem1|amount|buyitem2|amount
    # "amount" is either an integer, or a range like 1-3.
    # buyitem2|amount is optional.
    # Possible sellitem and buyitem values are:
    # iron_ingot, gold_ingot, emerald, diamond, [common/uncommon/rare/ancient/legendary/standard/edition/custom]_pack or [common/uncommon/rare/ancient/legendary]_card.
    # You also append "_random" at the end of a _card entry (e.g. common_card_random) in order to generate a random card for sale (or requested). [default: [1|1.0|common_card_random|1|common_card|1], [1|0.5|common_card|1|common_card|1|common_card|1], [2|1.0|uncommon_card_random|1|uncommon_card|1], [2|0.4|uncommon_card|1|uncommon_card|1|uncommon_card|1], [3|1.0|rare_card_random|1|rare_card|1], [3|0.3|rare_card|1|rare_card|1|rare_card|1], [4|1.0|ancient_card_random|1|ancient_card|1], [4|0.2|ancient_card|1|ancient_card|1|ancient_card|1], [5|0.5|legendary_card_random|1|legendary_card|1]]
    S:card_trader_trades <
        1|1.0|common_card_random|1|common_card|1
        1|0.5|common_card|1|common_card|1|common_card|1
        2|1.0|uncommon_card_random|1|uncommon_card|1
        2|0.4|uncommon_card|1|uncommon_card|1|uncommon_card|1
        3|1.0|rare_card_random|1|rare_card|1
        3|0.3|rare_card|1|rare_card|1|rare_card|1
        4|1.0|ancient_card_random|1|ancient_card|1
        4|0.2|ancient_card|1|ancient_card|1|ancient_card|1
        5|0.5|legendary_card_random|1|legendary_card|1
     >
}


